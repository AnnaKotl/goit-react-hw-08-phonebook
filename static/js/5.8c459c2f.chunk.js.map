{"version":3,"file":"static/js/5.8c459c2f.chunk.js","mappings":"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","sources":["components/FormContacts/Form.styled.js","redux/contacts/selectors.js","components/ContactsList/Contacts.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/FormContacts/FormContacts.jsx","page/Contacts.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nconst FormWrapper = styled.div`\n  width: 520px;\n  margin: 20px auto 0;\n  padding: 10px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 24px;\n  text-align: center;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  gap: 20px;\n  padding: 20px;\n  margin-bottom: 40px;\n  background-color: #f2d044;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 20px 25px -5px,\n    rgba(0, 0, 0, 0.04) 0px 10px 10px -5px;\n`;\n\nconst StyledInput = styled.input`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: 10px;\n  margin: 0 auto;\n  font-size: 16px;\n  border: none;\n  outline: 1px transparent;\n  border-radius: 4px;\n  width: 320px;\n  height: 46px;\n  transition: transform 0.3s ease, box-shadow 0.3s ease, border 0.3s ease,\n    outline 0.3s ease;\n\n  &:hover {\n    border: 1px solid #a8890d;\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid #a8890d;\n    box-shadow: 0 0 0 2px #a8890d;\n  }\n`;\n\nconst StyledButton = styled.button`\n  min-width: 120px;\n  margin: 10px auto;\n  padding: 10px;\n  font-size: 16px;\n  background-color: #4caf50;\n  font-weight: bold;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: transform 0.3s ease, box-shadow 0.3s ease, border 0.3s ease,\n    outline 0.3s ease;\n  max-width: 80px;\n  align-self: center;\n\n  &:hover {\n    transform: scale(1.02);\n    box-shadow: 0 8px 16px #355936;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px #355936;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nexport { FormWrapper, StyledForm, StyledButton, StyledInput };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector([selectFilter, selectContacts], (filter, contacts) => {\n  const normalizedFilterName = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilterName)\n  );\n  return filteredContacts;\n});\n\nexport const selectContactById = createSelector(\n  [selectContacts, (state, contactId) => contactId],\n  (contacts, contactId) => {\n    return contacts.find(contact => contact.id === contactId) || null;\n  }\n);","import { styled } from 'styled-components';\nimport { Button } from '@chakra-ui/react';\n\nconst List = styled.ul`\n  list-style: none;\n  padding: 0;\n  max-width: 100%;\n  margin: 0 auto;\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  max-width: 500px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n  flex-wrap: wrap;\n  margin: 0 auto;\n`;\n\nconst ContactText = styled.p`\n  margin: 0;\n  font-weight: 500;\n  font-size: large;\n`;\n\nconst DeleteButton = styled(Button)`\n  background-color: #f27868 !important;\n  border-radius: 100px;\n  box-shadow: rgba(187, 44, 44, 0.2) 0 -25px 18px -14px inset,\n    rgba(187, 44, 44, 0.15) 0 1px 2px, rgba(187, 44, 44, 0.15) 0 2px 4px,\n    rgba(187, 44, 44, 0.15) 0 4px 8px, rgba(187, 44, 44, 0.15) 0 8px 16px,\n    rgba(187, 44, 44, 0.15) 0 16px 32px;\n  cursor: pointer;\n  display: inline-block;\n  padding: 7px 20px;\n  text-align: center;\n  text-decoration: none;\n  transition: all 250ms;\n  border: 0;\n  font-size: 18px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n\n  &:hover {\n    box-shadow: rgba(187, 44, 44, 0.35) 0 -25px 18px -14px inset,\n      rgba(187, 44, 44, 0.25) 0 1px 2px, rgba(187, 44, 44, 0.25) 0 2px 4px,\n      rgba(187, 44, 44, 0.25) 0 4px 8px, rgba(187, 44, 44, 0.25) 0 8px 16px,\n      rgba(187, 44, 44, 0.25) 0 16px 32px;\n    transform: scale(1.05) rotate(-1deg);\n  }\n`;\n\nexport const ContactWrap = styled.div`\n  display: flex;\n  gap: 5px;\n`;\n\nexport { List, ListItem, ContactText, DeleteButton };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { ColorRing, FallingLines } from 'react-loader-spinner';\nimport { useState } from 'react';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\nimport {\n  List,\n  ListItem,\n  ContactText,\n  DeleteButton,\n  ContactWrap,\n} from './Contacts.styled';\n\nfunction ContactsList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const isError = useSelector(selectError);\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const [isLoadingMap, setIsLoadingMap] = useState({});\n\n  const handleClickDeleteButton = event => {\n    const { value } = event.currentTarget;\n    if (isLoadingMap[value]) {\n      return;\n    }\n    setIsLoadingMap(prevState => ({\n      ...prevState,\n      [value]: true,\n    }));\n    dispatch(deleteContact(value));\n  };\n\n  return (\n    <>\n      <div>\n        <List>\n          {isError && <p style={{ color: 'red', fontSize: 18 }}>{isError}</p>}\n          {isLoading && contacts.length === 0 ? (\n            <FallingLines\n              color=\"#4fa94d\"\n              width=\"100\"\n              visible={true}\n              ariaLabel=\"falling-lines-loading\"\n            />\n          ) : (\n            filteredContacts.map(contact => (\n              <ListItem key={contact.id}>\n                <ContactWrap>\n                  {' '}\n                  <ContactText>{contact.name}:</ContactText>\n                  <ContactText>{contact.number}</ContactText>\n                </ContactWrap>\n                  <DeleteButton\n                    type=\"button\"\n                    name=\"delete\"\n                    value={contact.id}\n                    disabled={isLoadingMap[contact.id]}\n                    onClick={handleClickDeleteButton}\n                  >\n                    {' '}\n                    {isLoadingMap[contact.id] && (\n                      <ColorRing visible={true} height=\"18\" width=\"18\" />\n                    )}{' '}\n                    Delete\n                  </DeleteButton>\n              </ListItem>\n            ))\n          )}\n        </List>\n      </div>\n    </>\n  );\n}\n\nexport default ContactsList;","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { StyledInput, FormWrapper } from '../FormContacts/Form.styled';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nfunction Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleChangeFilter = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <FormWrapper>\n      <label>\n        <StyledInput\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChangeFilter}\n          placeholder=\"Find contacts by name\"\n        />\n      </label>\n    </FormWrapper>\n  );\n}\n\nexport default Filter;\n","import { useState } from 'react';\nimport { CircularProgress } from '@chakra-ui/react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  FormWrapper,\n  StyledForm,\n  StyledButton,\n  StyledInput,\n  Title\n} from './Form.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\n\nfunction FormContacts() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleAddContact = (name, number) => {\n    const newContact = { name: name.trim(), number: number.trim() };\n    dispatch(addContact(newContact));\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const existingContact = contacts.find(\n      contact => contact.name === name.trim()\n    );\n    if (existingContact) {\n      alert(name + ' is already in contacts!');\n      reset();\n      return;\n    }\n    handleAddContact(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormWrapper>\n      <StyledForm onSubmit={handleSubmit}>\n        <Title>Create a new contact:</Title>\n        <label>\n          <StyledInput\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ' \\-\\u0400-\\u04FF]+$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Enter name\"\n            required\n          />\n        </label>\n\n        <label>\n          <StyledInput\n            value={number}\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            title=\"Phone number must be +380XXXXXXXXX or 0XXXXXXXXX\"\n            placeholder=\"Enter number\"\n            required\n          />\n        </label>\n\n        <StyledButton type=\"submit\" disabled={isLoading}>\n          {' '}\n          {isLoading && contacts.length !== 0 ? (\n            <CircularProgress isIndeterminate color=\"green.300\" />\n          ) : (\n            'Add'\n          )}\n        </StyledButton>\n      </StyledForm>\n    </FormWrapper>\n  );\n}\n\nexport default FormContacts;\n","import ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport FormContacts from 'components/FormContacts/FormContacts';\nimport { SecondaryTitle } from 'components/Layout/Layout.styled';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <FormContacts />\n      <SecondaryTitle>Contacts</SecondaryTitle>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["FormWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","StyledForm","form","_templateObject3","StyledInput","input","_templateObject4","StyledButton","button","_templateObject5","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","normalizedFilterName","toLowerCase","contact","name","includes","contactId","find","id","List","ul","ListItem","li","ContactText","p","DeleteButton","Button","ContactWrap","dispatch","useDispatch","useSelector","isError","filteredContacts","_useState","useState","_useState2","_slicedToArray","isLoadingMap","setIsLoadingMap","handleClickDeleteButton","event","value","currentTarget","prevState","_objectSpread","_defineProperty","deleteContact","_jsx","_Fragment","children","_jsxs","style","color","fontSize","length","FallingLines","width","visible","ariaLabel","map","number","type","disabled","onClick","ColorRing","height","onChange","setFilter","placeholder","setName","_useState3","_useState4","setNumber","handleChange","evt","_evt$target","target","reset","onSubmit","preventDefault","trim","alert","newContact","addContact","handleAddContact","pattern","title","required","CircularProgress","isIndeterminate","useEffect","fetchContacts","FormContacts","SecondaryTitle","Filter","ContactsList"],"sourceRoot":""}