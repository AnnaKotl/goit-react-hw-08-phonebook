{"version":3,"file":"static/js/520.7b687a02.chunk.js","mappings":"6SAEMA,EAAcC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qEAMjBC,EAAQJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qDAKxBI,EAAaP,EAAAA,GAAOQ,KAAIC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2TAcxBO,EAAcV,EAAAA,GAAOW,MAAKC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,2gBA2B1BU,EAAeb,EAAAA,GAAOc,OAAMC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,8jB,4LCxCnB,SAASa,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAM,SAASC,QAAQ,SAAQC,UACnCJ,EAAAA,EAAAA,KAACK,EAAAA,GAAG,CAACC,GAAG,UAAUC,EAAG,EAAGC,QAAQ,KAAKC,EAAG,IAAIL,UAC1CJ,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CACLC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAAAC,GACRlB,GACEmB,EAAAA,EAAAA,IAAS,CACPL,KAAMI,EAAOJ,KACbC,MAAOG,EAAOH,MACdC,SAAUE,EAAOF,WAGvB,EAAEV,SAED,SAAAc,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OAC/BrB,EAAAA,EAAAA,KAAA,QAAMe,SAAUI,EAAaf,UAC3BkB,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,QAAS,EAAGtB,MAAM,aAAYE,SAAA,EACpCkB,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAAArB,SAAA,EACVJ,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CAACC,QAAQ,OAAMvB,SAAC,eAC1BJ,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CACJC,OAAO,MACPC,MAAM,WACNC,GAAIC,EAAAA,EACJC,GAAG,OACHrB,KAAK,OACLsB,KAAK,OACLC,QAAQ,eAGZb,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAAArB,SAAA,EACVJ,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CAACC,QAAQ,QAAOvB,SAAC,mBAC3BJ,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CACJC,OAAO,MACPC,MAAM,WACNC,GAAIC,EAAAA,EACJC,GAAG,QACHrB,KAAK,QACLsB,KAAK,QACLC,QAAQ,eAGZb,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAACW,YAAahB,EAAON,UAAYO,EAAQP,SAASV,SAAA,EAC5DJ,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CAACC,QAAQ,WAAUvB,SAAC,cAC9BJ,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CACJC,OAAO,MACPC,MAAM,WACNC,GAAIC,EAAAA,EACJC,GAAG,WACHrB,KAAK,WACLsB,KAAK,WACLC,QAAQ,SACRE,SAAU,SAAAC,GACR,IAAIC,EAMJ,OAJID,EAAME,OAAS,IACjBD,EAAQ,+CAGHA,CACT,KAEFvC,EAAAA,EAAAA,KAACyC,EAAAA,GAAgB,CAAArC,SAAEgB,EAAON,eAG5Bd,EAAAA,EAAAA,KAACN,EAAAA,GAAY,CAACwC,KAAK,SAAQ9B,SAAC,qBAIzB,OAMnB,CC9FA,IAOA,EAPqB,WACnB,OACEJ,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAACH,EAAgB,KAGvB,C","sources":["components/FormContacts/Form.styled.js","components/FormRegistraction/FormRegistration.jsx","page/Registration.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nconst FormWrapper = styled.div`\n  width: 520px;\n  margin: 20px auto 0;\n  padding: 10px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 24px;\n  text-align: center;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  gap: 20px;\n  padding: 20px;\n  margin-bottom: 40px;\n  background-color: #f2d044;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 20px 25px -5px,\n    rgba(0, 0, 0, 0.04) 0px 10px 10px -5px;\n`;\n\nconst StyledInput = styled.input`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: 10px;\n  margin: 0 auto;\n  font-size: 16px;\n  border: none;\n  outline: 1px transparent;\n  border-radius: 4px;\n  width: 320px;\n  height: 46px;\n  transition: transform 0.3s ease, box-shadow 0.3s ease, border 0.3s ease,\n    outline 0.3s ease;\n\n  &:hover {\n    border: 1px solid #a8890d;\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid #a8890d;\n    box-shadow: 0 0 0 2px #a8890d;\n  }\n`;\n\nconst StyledButton = styled.button`\n  min-width: 120px;\n  margin: 10px auto;\n  padding: 10px;\n  font-size: 16px;\n  background-color: #4caf50;\n  font-weight: bold;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: transform 0.3s ease, box-shadow 0.3s ease, border 0.3s ease,\n    outline 0.3s ease;\n  max-width: 80px;\n  align-self: center;\n\n  &:hover {\n    transform: scale(1.02);\n    box-shadow: 0 8px 16px #355936;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px #355936;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nexport { FormWrapper, StyledForm, StyledButton, StyledInput };\n","import { useDispatch } from 'react-redux';\nimport { Formik, Field } from 'formik';\nimport {\n  Box,\n  Flex,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\nimport { StyledButton } from '../FormContacts/Form.styled'\nimport { register } from 'redux/auth/operations';\n\nexport default function FormRegistration() {\n  const dispatch = useDispatch();\n\n  return (\n    <Flex align=\"center\" justify=\"center\">\n      <Box bg=\"inherit\" p={6} rounded=\"md\" w={500}>\n        <Formik\n          initialValues={{\n            name: '',\n            email: '',\n            password: '',\n          }}\n          onSubmit={values => {\n            dispatch(\n              register({\n                name: values.name,\n                email: values.email,\n                password: values.password,\n              })\n            );\n          }}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n                <FormControl>\n                  <FormLabel htmlFor=\"name\">User name</FormLabel>\n                  <Field\n                    border=\"1px\"\n                    solid=\"#787882 \"\n                    as={Input}\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    variant=\"filled\"\n                  />\n                </FormControl>\n                <FormControl>\n                  <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n                  <Field\n                    border=\"1px\"\n                    solid=\"#787882 \"\n                    as={Input}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    variant=\"filled\"\n                  />\n                </FormControl>\n                <FormControl isInvalid={!!errors.password && touched.password}>\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <Field\n                    border=\"1px\"\n                    solid=\"#787882 \"\n                    as={Input}\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"filled\"\n                    validate={value => {\n                      let error;\n\n                      if (value.length < 6) {\n                        error = 'Password must contain at least 6 characters';\n                      }\n\n                      return error;\n                    }}\n                  />\n                  <FormErrorMessage>{errors.password}</FormErrorMessage>\n                </FormControl>\n\n                <StyledButton type=\"submit\">\n                  Registration\n                </StyledButton>\n              </VStack>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n}\n","import FormRegistration from 'components/FormRegistraction/FormRegistration';\n\nconst Registration = () => {\n  return (\n    <div>\n      <FormRegistration />\n    </div>\n  );\n};\nexport default Registration;\n"],"names":["FormWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","StyledForm","form","_templateObject3","StyledInput","input","_templateObject4","StyledButton","button","_templateObject5","FormRegistration","dispatch","useDispatch","_jsx","Flex","align","justify","children","Box","bg","p","rounded","w","Formik","initialValues","name","email","password","onSubmit","values","register","_ref","handleSubmit","errors","touched","_jsxs","VStack","spacing","FormControl","FormLabel","htmlFor","Field","border","solid","as","Input","id","type","variant","isInvalid","validate","value","error","length","FormErrorMessage"],"sourceRoot":""}